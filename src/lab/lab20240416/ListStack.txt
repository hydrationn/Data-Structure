2. 표기법
(1) 중위 표기법(Infix notation)
- 연산자를 두 피연산자 사이에 표기하는 방법
- 가장 일반적으로 사용되는 방법
(2) 후위 표기법(Postfix notation)
- 피연산자를 먼저 표시하고 연산자를 나중에 표기하는 방법
- 후위 표기법은 괄호 없이 중위 표기 수식을 표현할 수 있다.


>>>>> 과제
 교재의 ListStack 클래스를 참고하여 입력된 중위 표현식을 후위 표현식으로 변환하는 메소드를 작성하고 테스트하시오.

(1) 연산자에 대한 우선순위를 반환하는 다음의 두 메소드를 작성하시오.
- in_priority(): +, -, *, /, ( 중의 하나인 연산자가 스택 내에 있을 때의 우선순위를 반환하는 메소드
- out_priority(): +, -, *, /, ( 중의 하나인 연산자가 스택 밖에 있을 때의 우선순위를 반환하는 메소드

(2) 다음의 과정을 통해 중위 표현식을 후위 표현식으로 변환한다.
- 입력 스트링의 토큰이 피연산자일 때는 출력한다.
- 입력 스트링의 토큰이 오른쪽 괄호일 때, 강의 자료를 참고하여 수행한다.
- 그 외의 경우(입력 스트링의 토큰이 피연산자나 오른쪽 괄호가 아닐 때), in_priorty()와 out_priority() 메소드를 통해 우선순위를 비교하며 변환을 진행한다.

(3) 단, 연산자는 "+, -, *, /, (, )"만 존재하며, 중위 표현식의 괄호 개수 혹은 수학적 계산이 올바르지 않은 식은 주어지지 않는다.

=> INPUT
3 + 4 * 5
A * B - C
( ( 5 + 2 ) * 2 ) - 3

=> OUTPUT
3 4 5 * +
A B * C -
5 2 * 2 + 3 /
